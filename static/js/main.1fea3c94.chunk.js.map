{"version":3,"sources":["components/Cards/Cards.module.css","components/Header/Header.jsx","components/Cards/Cards.jsx","api/index.js","components/Chart/Chart.jsx","components/Footer/Footer.jsx","components/CountryPicker/CountryPicker.jsx","App.js","index.js","assets/logo/default.png","components/Chart/Chart.module.css"],"names":["module","exports","Header","style","width","height","textAlign","paddingTop","paddingRight","src","Logo","alt","Cards","data","confirmed","recovered","deaths","lastUpdate","className","Grid","container","spacing","justify","item","component","Card","xs","md","cx","styles","card","infected","CardContent","Typography","color","gutterBottom","variant","start","end","value","duration","separator","Date","toDateString","stats","fetchData","a","axios","get","console","log","fetchDailyData","modifiedData","map","dailyData","total","date","reportDate","Chart","useState","setDailyData","useEffect","fetchAPI","lineChart","length","labels","datasets","label","borderColor","backgroundColor","fill","Footer","href","target","CountryPicker","App","state","this","setState","React","Component","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.1fea3c94.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Cards_container___sNWF\",\"card\":\"Cards_card__2LM0I\",\"infected\":\"Cards_infected__3kZjy\",\"recovered\":\"Cards_recovered__2p6uX\",\"deaths\":\"Cards_deaths__2Ke0T\"};","import React from \"react\";\r\nimport Logo from \"../../assets/logo/default.png\";\r\n\r\nconst Header = () => {\r\n  return (\r\n    <img\r\n      style={{\r\n        width: \"400px\",\r\n        height: \"60px\",\r\n        textAlign: \"center\",\r\n        paddingTop: \"20px\",\r\n        paddingRight: \"20px\",\r\n      }}\r\n      src={Logo}\r\n      alt=\"\"\r\n    ></img>\r\n  );\r\n};\r\nexport default Header;\r\n","import React from \"react\";\r\nimport { Card, CardContent, Typography, Grid } from \"@material-ui/core\";\r\nimport CountUp from \"react-countup\";\r\nimport styles from \"./Cards.module.css\";\r\nimport cx from \"classnames\";\r\nconst Cards = ({ data: { confirmed, recovered, deaths, lastUpdate } }) => {\r\n  if (!confirmed) {\r\n    return \"loading....\";\r\n  }\r\n  if (!recovered) {\r\n    return \"loading....\";\r\n  }\r\n  if (!deaths) {\r\n    return \"loading....\";\r\n  }\r\n  if (!lastUpdate) {\r\n    return \"loading....\";\r\n  }\r\n  return (\r\n    <div className=\"container\">\r\n      <Grid container spacing={3} justify=\"center\">\r\n        <Grid\r\n          item\r\n          component={Card}\r\n          xs={12}\r\n          md={3}\r\n          className={cx(styles.card, styles.infected)}\r\n        >\r\n          <CardContent>\r\n            <Typography color=\"textSecondary\" gutterBottom>\r\n              Infected\r\n            </Typography>\r\n            <Typography variant=\"h5\">\r\n              <CountUp\r\n                start={0}\r\n                end={confirmed.value}\r\n                duration={2}\r\n                separator=\",\"\r\n              />\r\n            </Typography>\r\n            <Typography color=\"textSecondary\">\r\n              {new Date(lastUpdate).toDateString()}\r\n            </Typography>\r\n            <Typography variant=\"body2\">\r\n              Number of active COVID-19 cases\r\n            </Typography>\r\n          </CardContent>\r\n        </Grid>\r\n        <Grid\r\n          item\r\n          component={Card}\r\n          xs={12}\r\n          md={3}\r\n          className={cx(styles.card, styles.recovered)}\r\n        >\r\n          <CardContent>\r\n            <Typography color=\"textSecondary\" gutterBottom>\r\n              Recovered\r\n            </Typography>\r\n            <Typography variant=\"h5\">\r\n              <CountUp\r\n                start={0}\r\n                end={recovered.value}\r\n                duration={2}\r\n                separator=\",\"\r\n              />\r\n            </Typography>\r\n            <Typography color=\"textSecondary\">\r\n              {new Date(lastUpdate).toDateString()}\r\n            </Typography>\r\n            <Typography variant=\"body2\">\r\n              Number of COVID-19 recoveries\r\n            </Typography>\r\n          </CardContent>\r\n        </Grid>\r\n        <Grid\r\n          item\r\n          component={Card}\r\n          xs={12}\r\n          md={3}\r\n          className={cx(styles.card, styles.deaths)}\r\n        >\r\n          <CardContent>\r\n            <Typography color=\"textSecondary\" gutterBottom>\r\n              Deaths\r\n            </Typography>\r\n            <Typography variant=\"h5\">\r\n              <CountUp\r\n                start={0}\r\n                end={deaths.value}\r\n                duration={2}\r\n                separator=\",\"\r\n              />\r\n            </Typography>\r\n            <Typography color=\"textSecondary\">\r\n              {new Date(lastUpdate).toDateString()}\r\n            </Typography>\r\n            <Typography variant=\"body2\">Number of COVID-19 deaths</Typography>\r\n          </CardContent>\r\n        </Grid>\r\n      </Grid>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Cards;\r\n","import axios from \"axios\";\r\n\r\nconst stats = \"https://covid19.mathdro.id/api\";\r\n\r\nexport const fetchData = async () => {\r\n  try {\r\n    const {\r\n      data: { confirmed, recovered, deaths, lastUpdate },\r\n    } = await axios.get(stats);\r\n\r\n    return { confirmed, recovered, deaths, lastUpdate };\r\n  } catch (error) {\r\n    console.log(error);\r\n  }\r\n};\r\n\r\nexport const fetchDailyData = async () => {\r\n  try {\r\n    const { data } = await axios.get(`${stats}/daily`);\r\n    const modifiedData = data.map((dailyData) => ({\r\n      confirmed: dailyData.confirmed.total,\r\n      deaths: dailyData.deaths.total,\r\n      date: dailyData.reportDate,\r\n    }));\r\n    return modifiedData;\r\n  } catch (error) {}\r\n};\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { fetchDailyData } from \"../../api\";\r\nimport { Line, Bar } from \"react-chartjs-2\"; // also need to install chart.js seperately\r\nimport styles from \"./Chart.module.css\";\r\nconst Chart = () => {\r\n  const [dailyData, setDailyData] = useState([]);\r\n  useEffect(() => {\r\n    const fetchAPI = async () => {\r\n      setDailyData(await fetchDailyData());\r\n    };\r\n    fetchAPI();\r\n  });\r\n\r\n  // first wait for the data to be fetched from the API, then return the result. Until then, return null\r\n  const lineChart = dailyData.length ? (\r\n    <Line\r\n      data={{\r\n        labels: dailyData.map(({ date }) => date),\r\n        datasets: [\r\n          {\r\n            data: dailyData.map(({ confirmed }) => confirmed),\r\n            label: \"Infected\",\r\n            borderColor: \"#fcad03\",\r\n            backgroundColor: \" rgba(252, 173, 3, 0.36)\",\r\n            fill: true,\r\n          },\r\n          {\r\n            data: dailyData.map(({ deaths }) => deaths),\r\n            label: \"Deaths\",\r\n            borderColor: \"red\",\r\n            backgroundColor: \"rgba(255, 0, 0, 0.5)\",\r\n            fill: true,\r\n          },\r\n        ],\r\n      }}\r\n    />\r\n  ) : null;\r\n  return <div className={styles.container}>{lineChart}</div>;\r\n};\r\n\r\nexport default Chart;\r\n","import React from \"react\";\r\n\r\nfunction Footer() {\r\n  return (\r\n    <footer className={{ textAlign: \"center\" }}>\r\n      Created by{\" \"}\r\n      <a href=\"https://www.saffataziz.site/\" target=\"_blank\">\r\n        {\" \"}\r\n        Saffat Aziz\r\n      </a>\r\n    </footer>\r\n  );\r\n}\r\n\r\nexport default Footer;\r\n","import React from \"react\";\r\nconst CountryPicker = () => {\r\n  return <h1>CountryPicker</h1>;\r\n};\r\n\r\nexport default CountryPicker;\r\n","import React from \"react\";\nimport \"./App.css\";\nimport Header from \"./components/Header/Header\";\nimport Cards from \"./components/Cards/Cards\";\nimport Chart from \"./components/Chart/Chart\";\nimport Footer from \"./components/Footer/Footer\";\nimport CountryPicker from \"./components/CountryPicker/CountryPicker\";\nimport { fetchData } from \"./api\";\n\nclass App extends React.Component {\n  // declare app state\n  state = {\n    data: {},\n  };\n  async componentDidMount() {\n    const data = await fetchData();\n    this.setState({ data });\n  }\n  render() {\n    // destructure the data\n\n    const { data } = this.state;\n    return (\n      <div className=\"container\">\n        <Header />\n        <br></br>\n        <br></br>\n        <br></br>\n        <Cards data={data} />\n        <CountryPicker />\n        <Chart />\n        <br />\n        <br />\n        <br />\n        <br />\n        <br />\n        <Footer />\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport App from \"./App\";\r\n\r\nReactDOM.render(<App />, document.getElementById(\"root\"));\r\n","module.exports = __webpack_public_path__ + \"static/media/default.d94cd40a.png\";","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Chart_container___r3qh\"};"],"sourceRoot":""}