{"version":3,"sources":["components/Cards/Cards.module.css","components/Header/Header.jsx","components/Cards/Cards.jsx","api/index.js","components/Chart/Chart.jsx","components/Footer/Footer.jsx","components/CountryPicker/CountryPicker.jsx","App.js","index.js","assets/logo/default.png","components/Chart/Chart.module.css","components/CountryPicker/CountryPicker.module.css"],"names":["module","exports","Header","style","width","height","textAlign","paddingTop","paddingRight","src","Logo","alt","Cards","data","confirmed","recovered","deaths","lastUpdate","className","Grid","container","spacing","justify","item","component","Card","xs","md","cx","styles","card","infected","CardContent","Typography","color","gutterBottom","variant","start","end","value","duration","separator","Date","toDateString","stats","fetchData","country","a","changeableUrl","axios","get","console","log","fetchDailyData","modifiedData","map","dailyData","total","date","reportDate","fetchCountries","countries","name","Chart","useState","setDailyData","useEffect","fetchAPI","lineChart","length","labels","datasets","label","borderColor","backgroundColor","fill","barChart","options","legend","display","title","text","Footer","href","rel","target","CountryPicker","handleCountryChange","fetchedCountries","setFetchedCountries","FormControl","formControl","NativeSelect","defaultValue","onChange","e","i","key","App","state","fetchedData","setState","this","React","Component","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.b1543a7f.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Cards_container___sNWF\",\"card\":\"Cards_card__2LM0I\",\"infected\":\"Cards_infected__3kZjy\",\"recovered\":\"Cards_recovered__2p6uX\",\"deaths\":\"Cards_deaths__2Ke0T\"};","import React from \"react\";\r\nimport Logo from \"../../assets/logo/default.png\";\r\n\r\nconst Header = () => {\r\n  return (\r\n    <img\r\n      style={{\r\n        width: \"400px\",\r\n        height: \"60px\",\r\n        textAlign: \"center\",\r\n        paddingTop: \"20px\",\r\n        paddingRight: \"20px\",\r\n      }}\r\n      src={Logo}\r\n      alt=\"\"\r\n    ></img>\r\n  );\r\n};\r\nexport default Header;\r\n","import React from \"react\";\r\nimport { Card, CardContent, Typography, Grid } from \"@material-ui/core\";\r\nimport CountUp from \"react-countup\";\r\nimport styles from \"./Cards.module.css\";\r\nimport cx from \"classnames\";\r\nconst Cards = ({ data: { confirmed, recovered, deaths, lastUpdate } }) => {\r\n  if (!confirmed) {\r\n    return \"loading....\";\r\n  }\r\n  if (!recovered) {\r\n    return \"loading....\";\r\n  }\r\n  if (!deaths) {\r\n    return \"loading....\";\r\n  }\r\n  if (!lastUpdate) {\r\n    return \"loading....\";\r\n  }\r\n  return (\r\n    <div className=\"container\">\r\n      <Grid container spacing={3} justify=\"center\">\r\n        <Grid\r\n          item\r\n          component={Card}\r\n          xs={12}\r\n          md={3}\r\n          className={cx(styles.card, styles.infected)}\r\n        >\r\n          <CardContent>\r\n            <Typography color=\"textSecondary\" gutterBottom>\r\n              Infected\r\n            </Typography>\r\n            <Typography variant=\"h5\">\r\n              <CountUp\r\n                start={0}\r\n                end={confirmed.value}\r\n                duration={2}\r\n                separator=\",\"\r\n              />\r\n            </Typography>\r\n            <Typography color=\"textSecondary\">\r\n              {new Date(lastUpdate).toDateString()}\r\n            </Typography>\r\n            <Typography variant=\"body2\">\r\n              Number of active COVID-19 cases\r\n            </Typography>\r\n          </CardContent>\r\n        </Grid>\r\n        <Grid\r\n          item\r\n          component={Card}\r\n          xs={12}\r\n          md={3}\r\n          className={cx(styles.card, styles.recovered)}\r\n        >\r\n          <CardContent>\r\n            <Typography color=\"textSecondary\" gutterBottom>\r\n              Recovered\r\n            </Typography>\r\n            <Typography variant=\"h5\">\r\n              <CountUp\r\n                start={0}\r\n                end={recovered.value}\r\n                duration={2}\r\n                separator=\",\"\r\n              />\r\n            </Typography>\r\n            <Typography color=\"textSecondary\">\r\n              {new Date(lastUpdate).toDateString()}\r\n            </Typography>\r\n            <Typography variant=\"body2\">\r\n              Number of COVID-19 recoveries\r\n            </Typography>\r\n          </CardContent>\r\n        </Grid>\r\n        <Grid\r\n          item\r\n          component={Card}\r\n          xs={12}\r\n          md={3}\r\n          className={cx(styles.card, styles.deaths)}\r\n        >\r\n          <CardContent>\r\n            <Typography color=\"textSecondary\" gutterBottom>\r\n              Deaths\r\n            </Typography>\r\n            <Typography variant=\"h5\">\r\n              <CountUp\r\n                start={0}\r\n                end={deaths.value}\r\n                duration={2}\r\n                separator=\",\"\r\n              />\r\n            </Typography>\r\n            <Typography color=\"textSecondary\">\r\n              {new Date(lastUpdate).toDateString()}\r\n            </Typography>\r\n            <Typography variant=\"body2\">Number of COVID-19 deaths</Typography>\r\n          </CardContent>\r\n        </Grid>\r\n      </Grid>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Cards;\r\n","import axios from \"axios\";\r\n\r\nconst stats = \"https://covid19.mathdro.id/api\";\r\n\r\nexport const fetchData = async (country) => {\r\n  let changeableUrl = stats;\r\n\r\n  if (country) {\r\n    changeableUrl = `${stats}/countries/${country}`;\r\n  }\r\n\r\n  try {\r\n    const {\r\n      data: { confirmed, recovered, deaths, lastUpdate },\r\n    } = await axios.get(changeableUrl);\r\n\r\n    return { confirmed, recovered, deaths, lastUpdate };\r\n  } catch (error) {\r\n    console.log(error);\r\n  }\r\n};\r\n\r\nexport const fetchDailyData = async () => {\r\n  try {\r\n    const { data } = await axios.get(`${stats}/daily`);\r\n    const modifiedData = data.map((dailyData) => ({\r\n      confirmed: dailyData.confirmed.total,\r\n      deaths: dailyData.deaths.total,\r\n      date: dailyData.reportDate,\r\n    }));\r\n    return modifiedData;\r\n  } catch (error) {\r\n    console.log(error);\r\n  }\r\n};\r\n\r\nexport const fetchCountries = async () => {\r\n  try {\r\n    const {\r\n      data: { countries },\r\n    } = await axios.get(`${stats}/countries`);\r\n    return countries.map((country) => country.name);\r\n  } catch (error) {\r\n    console.log(error);\r\n  }\r\n};\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { fetchDailyData } from \"../../api\";\r\nimport { Line, Bar } from \"react-chartjs-2\"; // also need to install chart.js seperately\r\nimport styles from \"./Chart.module.css\";\r\nconst Chart = ({ data: { confirmed, deaths, recovered }, country }) => {\r\n  const [dailyData, setDailyData] = useState([]);\r\n  useEffect(() => {\r\n    const fetchAPI = async () => {\r\n      setDailyData(await fetchDailyData());\r\n    };\r\n    fetchAPI();\r\n  }, []);\r\n\r\n  // first wait for the data to be fetched from the API, then return the result. Until then, return null\r\n  const lineChart = dailyData.length ? (\r\n    <Line\r\n      data={{\r\n        labels: dailyData.map(({ date }) => date),\r\n        datasets: [\r\n          {\r\n            data: dailyData.map(({ confirmed }) => confirmed),\r\n            label: \"Infected\",\r\n            borderColor: \"#fcad03\",\r\n            backgroundColor: \" rgba(252, 173, 3, 0.36)\",\r\n            fill: true,\r\n          },\r\n          {\r\n            data: dailyData.map(({ deaths }) => deaths),\r\n            label: \"Deaths\",\r\n            borderColor: \"red\",\r\n            backgroundColor: \"rgba(255, 0, 0, 0.5)\",\r\n            fill: true,\r\n          },\r\n        ],\r\n      }}\r\n    />\r\n  ) : null;\r\n\r\n  const barChart = confirmed ? (\r\n    <Bar\r\n      data={{\r\n        labels: [\"Infected\", \"Recovered\", \"Deaths\"],\r\n        datasets: [\r\n          {\r\n            label: \"People\",\r\n            backgroundColor: [\r\n              \"rgba(252, 173, 3, 0.76)\",\r\n              \"rgba(0, 255, 21, 0.747)\",\r\n              \"rgba(255, 0, 0, 0.932)\",\r\n            ],\r\n            data: [confirmed.value, recovered.value, deaths.value],\r\n          },\r\n        ],\r\n      }}\r\n      options={{\r\n        legend: { display: false },\r\n        title: { display: true, text: `Current state in ${country}` },\r\n      }}\r\n    />\r\n  ) : null;\r\n  return (\r\n    <div className={styles.container}>{country ? barChart : lineChart}</div>\r\n  );\r\n};\r\n\r\nexport default Chart;\r\n","import React from \"react\";\r\n\r\nfunction Footer() {\r\n  return (\r\n    <footer className={{ textAlign: \"center\" }}>\r\n      Created by{\" \"}\r\n      <a\r\n        href=\"https://www.saffataziz.site/\"\r\n        rel=\"noopener noreferrer\"\r\n        target=\"_blank\"\r\n      >\r\n        {\" \"}\r\n        Saffat Aziz\r\n      </a>\r\n    </footer>\r\n  );\r\n}\r\n\r\nexport default Footer;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { NativeSelect, FormControl } from \"@material-ui/core\";\r\nimport styles from \"./CountryPicker.module.css\";\r\nimport { fetchCountries } from \"../../api\";\r\n\r\nconst CountryPicker = ({ handleCountryChange }) => {\r\n  const [fetchedCountries, setFetchedCountries] = useState([]);\r\n  useEffect(() => {\r\n    const fetchAPI = async () => {\r\n      setFetchedCountries(await fetchCountries());\r\n    };\r\n\r\n    fetchAPI();\r\n  }, [setFetchedCountries]);\r\n  return (\r\n    <div>\r\n      <div>\r\n        <h2>Pick a Country to visualize it's covid-19 data</h2>\r\n      </div>\r\n      <br></br>\r\n      <br></br>\r\n      <FormControl className={styles.formControl}>\r\n        <NativeSelect\r\n          defaultValue=\"\"\r\n          onChange={(e) => handleCountryChange(e.target.value)}\r\n        >\r\n          <option value=\"\">Global</option>\r\n          {fetchedCountries.map((country, i) => (\r\n            <option key={i} value={country}>\r\n              {country}\r\n            </option>\r\n          ))}\r\n        </NativeSelect>\r\n      </FormControl>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default CountryPicker;\r\n","import React from \"react\";\nimport \"./App.css\";\nimport Header from \"./components/Header/Header\";\nimport Cards from \"./components/Cards/Cards\";\nimport Chart from \"./components/Chart/Chart\";\nimport Footer from \"./components/Footer/Footer\";\nimport CountryPicker from \"./components/CountryPicker/CountryPicker\";\nimport { fetchData } from \"./api\";\n\nclass App extends React.Component {\n  // declare app state\n  state = {\n    data: {},\n    country: \"\",\n  };\n  async componentDidMount() {\n    const fetchedData = await fetchData();\n    this.setState({ data: fetchedData });\n  }\n\n  handleCountryChange = async (country) => {\n    const fetchedData = await fetchData(country);\n    this.setState({ data: fetchedData, country: country });\n  };\n  render() {\n    // destructure the data\n\n    const { data, country } = this.state;\n    return (\n      <div className=\"container\">\n        <Header />\n        <br></br>\n        <br></br>\n        <br></br>\n        <Cards data={data} />\n        <br></br>\n        <br></br>\n        <br></br>\n        <br></br>\n        <CountryPicker handleCountryChange={this.handleCountryChange} />\n        <br />\n        <br />\n        <br />\n        <Chart data={data} country={country} />\n        <br />\n        <br />\n        <br />\n        <br />\n        <br />\n        <Footer />\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport App from \"./App\";\r\n\r\nReactDOM.render(<App />, document.getElementById(\"root\"));\r\n","module.exports = __webpack_public_path__ + \"static/media/default.d94cd40a.png\";","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Chart_container___r3qh\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"formControl\":\"CountryPicker_formControl__yxpAM\"};"],"sourceRoot":""}